<?php

/**
 * @file drupal_starterkit.module
 * TODO: Enter file description here.
 */

/**
 * Implements hook_menu().
 */
function drupal_starterkit_menu() {
  $items = array();
  
  $items['admin/config/drupal_starterkit'] = array(
    'title' => 'Administer Drupal Starterkit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('drupal_starterkit_settings_form'),
    'access arguments' => array('administer drupal_starterkit'),
  );
  return $items;
}

/**
 * Implements hook_cron().
 */
function drupal_starterkit_cron() {
  // Short-running operation example, not using a queue:
  // Delete all expired records since the last cron run.
  $expires = variable_get('mymodule_cron_last_run', REQUEST_TIME);
  db_delete('mymodule_table')
    ->condition('expires', $expires, '>=')
    ->execute();
  variable_set('mymodule_cron_last_run', REQUEST_TIME);

  // Long-running operation example, leveraging a queue:
  // Fetch feeds from other sites.
  $result = db_query('SELECT * FROM {aggregator_feed} WHERE checked + refresh < :time AND refresh <> :never', array(
    ':time' => REQUEST_TIME,
    ':never' => AGGREGATOR_CLEAR_NEVER,
  ));
  $queue = DrupalQueue::get('aggregator_feeds');
  foreach ($result as $feed) {
    $queue->createItem($feed);
  }
}

/**
 * Implements hook_form_alter().
 */
function drupal_starterkit_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['type']) && $form['type']['#value'] . '_node_settings' == $form_id) {
    $form['workflow']['upload_' . $form['type']['#value']] = array(
      '#type' => 'radios',
      '#title' => t('Attachments'),
      '#default_value' => variable_get('upload_' . $form['type']['#value'], 1),
      '#options' => array(t('Disabled'), t('Enabled')),
    );
  }
}

/**
 * Form builder.
 */
function drupal_starterkit_settings_form($form, &$form_state) {
  $form['drupal_starterkit_variable_foo'] = array(
    '#type' => 'textfield',
    '#title' => t('Foo'),
    '#default_value' => variable_get('drupal_starterkit_variable_foo', 42),
    '#required' => TRUE,
  );
  
  // TODO! You probably don't need validation or submit handlers if using system_settings_form().
  return system_settings_form($form);
}

/**
 * Form validate handler.
 */
function drupal_starterkit_settings_form_validate($form, &$form_state) {
  if ($form_state['values']['element'] != 'hello') {
    form_set_error('element', t('Please say hello?'));
  }
}

/**
 * Form submit handler.
 */
function drupal_starterkit_settings_form_submit($form, &$form_state) {

}
